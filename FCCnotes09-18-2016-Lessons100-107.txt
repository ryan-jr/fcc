# Free Code Camp
# 09/18/2016 
# Lessons 100 - 


# Target HTML Elements with Selectors using jQuery 

- All jQuery fuections start with a $ 

NOTE: 

Note that we've already included both the jQuery library and the Animate.css library in the background so that you can use them in the editor. So you are using jQuery to apply the Animate.css bounce class to your button elements. 

- to be safe with jQuery, be sure to use double quotes " and not single quotes '

CODE:

<script>
  $(document).ready(function() {
    $("button").addClass("animated bounce");
    
    
  });
</script>


# Target Elements by Class Using jQuery

-the .addClass fuction in jQuery allows us to add classes to elements 

-we select certain elements that we want just after the $, so for instance the button class or the text-primary class, in this case the well class.  

-in order to select classes we need the . before the class like so: 
$(".CLASSNAMEHERE")

this is opposed to:
$("ELEMENTNAMEHERE") as seen above

CODE:


<script>
  $(document).ready(function() {
    $("button").addClass("animated bounce");
  });
    
    $(".well").addClass("animated shake")
</script>

# Target Elements by ID Using jQuery
 
-to select specific IDs we use $("#IDNAMEHERE")

CODE:
<script>
  $(document).ready(function() {
    $("button").addClass("animated bounce");
    $(".well").addClass("animated shake");
     
    $("#target3").addClass("animated fadeOut")
  });
</script>


# Delete your jQuery Functions


-just removing the jQuery animation functions, but keeping the document ready function

# Target the same element with multiple jQuery Selectors

-Now you know three ways of targeting elements: by type: $("button"), by class: $(".btn"), and by id $("#target1"). 

-ok, here we're modifying buttons in the way we want based upon the criteria of what element they are, what class they belong to, or what target it is/they are.  

CODE:

<script>
  $(document).ready(function() {
    
    $("button").addClass("animated")
    $(".btn").addClass("shake")
    $("#target1").addClass("btn-primary")
  });
</script>

# Remove Classes from an element with jQuery


-we can remove classes from our elements as well using removeClass

<script>
  $(document).ready(function() {
    $("button").addClass("animated bounce");
    $(".well").addClass("animated shake");
    $("#target3").addClass("animated fadeOut");
  $("button").removeClass("btn-default")
  });
</script>

# Change the CSS of an Element Using jQuery

- with using the .css function of jQuery it's slightly different than a normal CSS declaration because the values it uses are in quotes, and are separated by a comma rather than a space.  

example (normal CSS):
 <button class="btn btn-default target" id="target1">#target1</button>
 
jQuery: 
$("#target1").css("color", "blue");

CODE:

<script>
  $(document).ready(function() {
   $("#target1").css("color", "red")
 
  });
</script>


# Disable an Element Using jQuery


- you can use jQuery to disable buttons with the properties (.prop) function like so 

$("button").prop("disabled", true)


CODE: 

<script>
  $(document).ready(function() {
    $("#target1").css("color", "red");

    
    $("#target1").prop("disabled", true)
  });
</script>

# Change Text Inside an Element Using jQuery


-you can update the text within an element using the .html() function in jquery

-the function lets you add HTML tags and text within an element

-jQuery also has the .text() function that will only replace the existing content, but NOT add HTML tags 

CODE:

<script>
  $(document).ready(function() {
    $("#target1").css("color", "red");
     
    $("#target4").html("<em>#target4</em>");
  }); 
</script>

# Remove an Element Using jQuery

- jQuery has a function called .remove() that will remove an HTML element entirely


CODE:
    $("#target4").remove();
  });
  
# Use appendTo to Move Elements with jQuery
 
- jQuery has a function called appendTo() that allows you to select HTML elements and append them to another element.

 
-For example, if we wanted to move target4 from our right well to our left well, we would use:

$("#target4").appendTo("#left-well");


CODE: 
 $("#target2").appendTo("#right-well")
	

# Clone an Element Using jQuery


-In addition to moving elements, you can also copy them from one place to another.

jQuery has a function called clone() that makes a copy of an element.

 
-For example, if we wanted to copy target2 from our left-well to our right-well, we would use:

$("#target2").clone().appendTo("#right-well");

-in order to get the above to work we have to chain functions together.  

CODE:

$("#target5").clone().appendTo("#left-well") 

# Target the Parent of an Element Using jQuery


- Every HTML element has a parent element from which it inherits properties.

For example, your jQuery Playground h3 element has the parent element of <div class="container-fluid">, which itself has the parent body.

jQuery has a function called parent() that allows you to access the parent of whichever element you've selected. 

Here's an example of how you would use the parent() function if you wanted to give the parent element of the left-well element a background color of blue:

$("#left-well").parent().css("background-color", "blue")

CODE:

$("#target1").parent().css("background-color", "red");

# Target the Children of an Element Using jQuery

-jQuery has a function called children() that allows you to access the children of whichever element you've selected.

-Here's an example of how you would use the children() function to give the children of your left-well element the color of blue:

$("#left-well").children().css("color", "blue")

CODE:
    $("#right-well").children().css("color", "orange")
   
 
# Target a Specific Child of an Element Using jQuery


-there won't always be convienent selectors to work with so jQuery also has CSS selectors such as target:nth-child(n) 

-the above allows you to select all the nth elements with the target class/element type

Here's how you would give the third element in each well the bounce class:

$(".target:nth-child(3)").addClass("animated bounce");

 CODE:
     $(".btn:nth-child(2)").addClass("animated bounce");
	 
	 
# Target Even Numbered Elements Using jQuery


- Here's how you would target all the odd-numbered elements with class target and give them classes:

$(".target:odd").addClass("animated shake");

NOTE:

Note that jQuery is zero-indexed, meaning that, counter-intuitively, :odd selects the second element, fourth element, and so on.
	 
 
 
CODE:

$(".target:even").addClass("animated shake")
  });

# Use jQuery to Modify the entire page 

- 
jQuery can target the body element as well.

Here's how we would make the entire body fade out: $("body").addClass("animated fadeOut");

CODE:
    
$("body").addClass("animated hinge")